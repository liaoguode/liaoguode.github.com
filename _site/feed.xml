<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Peterliao Blog</title>
    <description>关注java生态，目标是成为一名快乐的架构师 | Peterliao，Software Engineer，Java Developer | 这里是 @Peterliao 的个人博客，与你一起成长。</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 03 May 2018 18:33:10 +0800</pubDate>
    <lastBuildDate>Thu, 03 May 2018 18:33:10 +0800</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>git笔记一</title>
        <description>&lt;h1 id=&quot;在windows下如何生成gitlab的ssh-key&quot;&gt;在windows下如何生成gitlab的ssh key&lt;/h1&gt;

&lt;p&gt;打开git bash&lt;/p&gt;

&lt;p&gt;输入命令ssh-keygen -t rsa -C “email”（为gitlab的邮箱），会提示设置密码什么的，一路默认不设置。
&lt;img src=&quot;/img/git-note-1-1.png&quot; alt=&quot;git-note-1-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后在用户目录下的.ssh目录下会有两个文件，打开id_rsa.pub文件，此文件的内容为ssh公钥，将其贴到gitlab对应的ssh公钥位置即可。
&lt;img src=&quot;/img/git-note-1-2.png&quot; alt=&quot;git-note-1-2&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 03 May 2018 04:00:00 +0800</pubDate>
        <link>http://localhost:4000/git/2018/05/03/git-note-1/</link>
        <guid isPermaLink="true">http://localhost:4000/git/2018/05/03/git-note-1/</guid>
        
        <category>git</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>springboot学习笔记三</title>
        <description>&lt;h1 id=&quot;spring-boot-学习笔记三数据库操作&quot;&gt;spring boot 学习笔记三(数据库操作)&lt;/h1&gt;

&lt;h2 id=&quot;spring-boot整合redis&quot;&gt;spring boot整合redis&lt;/h2&gt;

&lt;p&gt;1.redis介绍&lt;/p&gt;

&lt;p&gt;redis是一个缓存和内存数据库。&lt;/p&gt;

&lt;p&gt;2.redis的maven包导入&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-data-redis&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3.整合redis&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;配置redis数据库&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-properties highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.redis.database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Redis服务器地址
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.redis.host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;127.0.0.1&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Redis服务器连接端口
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.redis.port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;6379&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Redis服务器连接密码（默认为空）
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.redis.password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;liao5414&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 连接池最大连接数（使用负值表示没有限制）
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.redis.pool.max-active&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;8&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 连接池最大阻塞等待时间（使用负值表示没有限制）
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.redis.pool.max-wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-1&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 连接池中的最大空闲连接
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.redis.pool.max-idle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;8&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 连接池中的最小空闲连接
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.redis.pool.min-idle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 连接超时时间（毫秒）
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.redis.timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;注入redis配置&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ansible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.autoconfigure.EnableAutoConfiguration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.context.properties.ConfigurationProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.context.annotation.Bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.context.annotation.Configuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.redis.core.RedisTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.redis.core.StringRedisTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;redis.clients.jedis.JedisPoolConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@EnableAutoConfiguration&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RedisConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@ConfigurationProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spring.redis&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JedisPoolConfig&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRedisConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;JedisPoolConfig&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JedisPoolConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@ConfigurationProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spring.redis&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JedisConnectionFactory&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getConnectionFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;JedisConnectionFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JedisConnectionFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;JedisPoolConfig&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getRedisConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPoolConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


    &lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RedisTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getRedisTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;RedisTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?,?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringRedisTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getConnectionFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 27 Sep 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/spring/2017/09/27/springboot-note3/</link>
        <guid isPermaLink="true">http://localhost:4000/spring/2017/09/27/springboot-note3/</guid>
        
        <category>springboot</category>
        
        
        <category>spring</category>
        
      </item>
    
      <item>
        <title>springboot学习笔记二</title>
        <description>&lt;h1 id=&quot;spring-boot-学习笔记二数据库操作&quot;&gt;spring boot 学习笔记二(数据库操作)&lt;/h1&gt;

&lt;h2 id=&quot;spring-boot整合druid&quot;&gt;spring boot整合druid&lt;/h2&gt;

&lt;p&gt;1.druid是什么&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;druid是alibaba开源的一个数据库连接池，通过网上的比较发现，性能不错，扩展性强，具有SQL解析和页面监控功能，功能强大。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.如何整合spring boot 和druid&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;引入maven的&lt;a href=&quot;http://www.mvnrepository.com/artifact/com.alibaba/druid&quot;&gt;jar包&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.alibaba&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;druid&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${druid-version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3.配置druid&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;配置数据源&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-properties highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#数据库设置
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.datasource.type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;com.alibaba.druid.pool.DruidDataSource&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.datasource.driverClassName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;com.mysql.jdbc.Driver&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.datasource.url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;jdbc:mysql://localhost:3306/ansibleui?useUnicode=true&amp;amp;characterEncoding=UTF-8&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.datasource.username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.datasource.password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;liao5414&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#--------------------------
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.datasource.initialSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.datasource.minIdle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.datasource.maxActive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 配置获取连接等待超时的时间
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.datasource.maxWait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;60000&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.datasource.timeBetweenEvictionRunsMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;60000&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 配置一个连接在池中最小生存的时间，单位是毫秒
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.datasource.minEvictableIdleTimeMillis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;300000&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.datasource.validationQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;SELECT 1 FROM DUAL&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.datasource.testWhileIdle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.datasource.testOnBorrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.datasource.testOnReturn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 打开PSCache，并且指定每个连接上PSCache的大小
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.datasource.poolPreparedStatements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.datasource.maxPoolPreparedStatementPerConnectionSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.datasource.filters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;stat,wall,log4j&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;spring.datasource.connectionProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;注入数据源配置&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ansible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.alibaba.druid.pool.DruidDataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.context.properties.ConfigurationProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.context.annotation.Bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.context.annotation.Configuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.sql.DataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Configuration&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//设置为配置的bean&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DruidDataSourceConfiguration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@ConfigurationProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prefix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;spring.datasource&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//注入配置到bean类,需要搭配@Bean&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataSource&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;druidDataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DruidDataSource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;druidDataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DruidDataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;druidDataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;设置druid的filter&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ansible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.alibaba.druid.support.http.WebStatFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.annotation.WebFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.annotation.WebInitParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@WebFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filterName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;druidWebStatFilter&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlPatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/*&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;initParams&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nd&quot;&gt;@WebInitParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;exclusions&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DruidStatFilter&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebStatFilter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;配置druid监控界面&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ansible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.alibaba.druid.support.http.StatViewServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.annotation.WebInitParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.annotation.WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;urlPatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/druid/*&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;initParams&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nd&quot;&gt;@WebInitParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;allow&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;nd&quot;&gt;@WebInitParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;delay&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;182.180.0.1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;nd&quot;&gt;@WebInitParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loginUsername&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;peterliao&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;nd&quot;&gt;@WebInitParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loginPassword&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;liao5414&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;nd&quot;&gt;@WebInitParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;resetEnable&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DruidStatViewServlet&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StatViewServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;4.监控地址&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Sep 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/spring/2017/09/26/springboot-note-2/</link>
        <guid isPermaLink="true">http://localhost:4000/spring/2017/09/26/springboot-note-2/</guid>
        
        <category>springboot</category>
        
        
        <category>spring</category>
        
      </item>
    
      <item>
        <title>Spark2 Note 6</title>
        <description>
</description>
        <pubDate>Mon, 24 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/24/spark2-note-6/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/24/spark2-note-6/</guid>
        
        
      </item>
    
      <item>
        <title>elasticsearch学习笔记四</title>
        <description>&lt;h2 id=&quot;聚合&quot;&gt;聚合&lt;/h2&gt;

&lt;h1 id=&quot;桶&quot;&gt;桶&lt;/h1&gt;
&lt;p&gt;满足特定条件的文档的集合&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;一个雇员属于 男性 桶或者 女性 桶&lt;/li&gt;
  &lt;li&gt;奥尔巴尼属于 纽约 桶&lt;/li&gt;
  &lt;li&gt;日期2014-10-28属于 十月 桶
指标
=======
对桶内的文档进行统计计算&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;桶能让我们划分文档到有意义的集合， 但是最终我们需要的是对这些桶内的文档进行一些指标的计算。分桶是一种达到目的的手段：它提供了一种给文档分组的方法来让我们可以计算感兴趣的指标。&lt;/p&gt;

&lt;p&gt;大多数 指标 是简单的数学运算（例如最小值、平均值、最大值，还有汇总），这些是通过文档的值来计算。在实践中，指标能让你计算像平均薪资、最高出售价格、95%的查询延迟这样的数据。
桶和指标的组合
=======
聚合 是由桶和指标组成的。 聚合可能只有一个桶，可能只有一个指标，或者可能两个都有。也有可能有一些桶嵌套在其他桶里面。例如，我们可以通过所属国家来划分文档（桶），然后计算每个国家的平均薪酬（指标）。&lt;/p&gt;

&lt;p&gt;由于桶可以被嵌套，我们可以实现非常多并且非常复杂的聚合：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;通过国家划分文档（桶）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;然后通过性别划分每个国家（桶）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;然后通过年龄区间划分每种性别（桶）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最后，为每个年龄区间计算平均薪酬（指标）&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;最后将告诉你每个 &amp;lt;国家, 性别, 年龄&amp;gt; 组合的平均薪酬。所有的这些都在一个请求内完成并且只遍历一次数据！&lt;/p&gt;

&lt;h2 id=&quot;聚合-1&quot;&gt;聚合&lt;/h2&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/cars/transactions/_search&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;aggs&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;popular_colors&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;terms&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
              &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;field&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;聚合操作被置于顶层参数 aggs 之下（如果你愿意，完整形式 aggregations 同样有效）。
然后，可以为聚合指定一个我们想要名称，本例中是： popular_colors 。
最后，定义单个桶的类型 terms 。&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/elasticsearch/2017/07/07/elasticsearch-note-4/</link>
        <guid isPermaLink="true">http://localhost:4000/elasticsearch/2017/07/07/elasticsearch-note-4/</guid>
        
        <category>elasticsearch学习笔记</category>
        
        
        <category>elasticsearch</category>
        
      </item>
    
      <item>
        <title>elasticsearch学习笔记三</title>
        <description>&lt;h1 id=&quot;多字段搜索&quot;&gt;多字段搜索&lt;/h1&gt;

&lt;h2 id=&quot;多字符串查询&quot;&gt;多字符串查询&lt;/h2&gt;
&lt;p&gt;查询子句的权重取决于子句的位置，位于二层bool的子句权重&lt;/p&gt;

&lt;h2 id=&quot;单字符串查询&quot;&gt;单字符串查询&lt;/h2&gt;
&lt;p&gt;了解数据才能构建单字符串查询
单字符查询时数据有三种情形&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;最佳字段：短语如何分词去匹配，词组匹配调整匹配度
当搜索词语具体概念的时候，比如 “brown fox” ，词组比各自独立的单词更有意义。像 title 和 body 这样的字段，尽管它们之间是相关的，但同时又彼此相互竞争。文档在 相同字段 中包含的词越多越好，评分也来自于 最匹配字段 。&lt;/li&gt;
  &lt;li&gt;多数字段：在多个字段上进行匹配，调整匹配度
为了对相关度进行微调，常用的一个技术就是将相同的数据索引到不同的字段，它们各自具有独立的分析链。主字段可能包括它们的词源、同义词以及 变音词 或口音词，被用来匹配尽可能多的文档。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;相同的文本被索引到其他字段，以提供更精确的匹配。一个字段可以包括未经词干提取过的原词，另一个字段包括其他词源、口音，还有一个字段可以提供 词语相似性 信息的瓦片词（shingles）。&lt;/p&gt;

&lt;p&gt;其他字段是作为匹配每个文档时提高相关度评分的 信号 ， 匹配字段越多 则越好。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;混合字段：一个字段包含多个字段，搜索一个相当于搜多个，调整匹配度
对于某些实体，我们需要在多个字段中确定其信息，单个字段都只能作为整体的一部分：Person： first_name 和 last_name （人：名和姓）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在这种情况下，我们希望在 任何 这些列出的字段中找到尽可能多的词，这有如在一个大字段中进行搜索，这个大字段包括了所有列出的字段。&lt;/p&gt;

&lt;h2 id=&quot;最佳字段&quot;&gt;最佳字段&lt;/h2&gt;
&lt;p&gt;dis_max查询：分离 最大化查询（Disjunction Max Query），分离（Disjunction）的意思是 或（or） ，这与可以把结合（conjunction）理解成 与（and） 相对应。分离最大化查询（Disjunction Max Query）指的是： 将任何与任一查询匹配的文档作为结果返回，但只将最佳匹配的评分作为查询的评分结果返回 ：&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;query&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dis_max&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;queries&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Brown fox&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Brown fox&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;最佳字段查询调优&quot;&gt;最佳字段查询调优&lt;/h2&gt;
&lt;p&gt;tie_breaker参数
可以通过tie_breaker参数将其他匹配语句的评分也考虑进来&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;query&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dis_max&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;queries&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Quick pets&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Quick pets&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tie_breaker&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;多数字段&quot;&gt;多数字段&lt;/h2&gt;
&lt;p&gt;希望将所有匹配字段的评分合并起来，所以使用 most_fields 类型&lt;/p&gt;

&lt;h2 id=&quot;短语匹配&quot;&gt;短语匹配&lt;/h2&gt;
&lt;p&gt;match_phrase&lt;/p&gt;

</description>
        <pubDate>Fri, 30 Jun 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/elasticsearch/2017/06/30/elasticsearch-note-3/</link>
        <guid isPermaLink="true">http://localhost:4000/elasticsearch/2017/06/30/elasticsearch-note-3/</guid>
        
        <category>elasticsearch学习笔记</category>
        
        
        <category>elasticsearch</category>
        
      </item>
    
      <item>
        <title>elasticsearch学习笔记二</title>
        <description>&lt;h1 id=&quot;term和match的使用区别&quot;&gt;term和match的使用区别&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;term&quot;&gt;term&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;在过滤上下文中使用（filter），用来过滤文档&lt;/li&gt;
  &lt;li&gt;terms，多值,terms:[]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;match&quot;&gt;match&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;在查询上下文中使用(query)，用来查询文档&lt;/li&gt;
  &lt;li&gt;实质上为通过analyzer分词，将分词后的词通过bool和term进行组合查询&lt;/li&gt;
  &lt;li&gt;boost：提高查询权重，加大评分权重&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;bool&quot;&gt;bool&lt;/h1&gt;

&lt;p&gt;语法
“bool” : {
      “must” :     [], 
      “should” :   [],
      “must_not” : [],
   }&lt;/p&gt;

&lt;p&gt;must：必须匹配
should：应该匹配，至少一个，理解为or
must_not：不能匹配&lt;/p&gt;

&lt;p&gt;minimum_should_match:最少匹配should个数，默认为1&lt;/p&gt;

&lt;h1 id=&quot;range&quot;&gt;range&lt;/h1&gt;

&lt;p&gt;语法&lt;/p&gt;

&lt;p&gt;range{
    “price” : {
        “gte” : 20,
        “lte” : 40
    }
}&lt;/p&gt;

&lt;p&gt;gte  &amp;gt;=
lte  &amp;lt;=
lt   &amp;lt;
gt   &amp;gt;&lt;/p&gt;

&lt;h1 id=&quot;分析器&quot;&gt;分析器&lt;/h1&gt;

&lt;p&gt;索引时：字段映射配置的分析器&amp;gt;索引设置中名为 default 的分析器&amp;gt;默认分析器standard 标准分析器
查询时：查询自己定义的 analyzer&amp;gt;字段映射配置的分析器&amp;gt;索引设置中名为 default 的分析器&amp;gt;默认分析器standard 标准分析器&lt;/p&gt;

&lt;p&gt;设置字段map时有一个可选的 search_analyzer 映射，它仅会应用于搜索时，有一个等价的 default_search 映射，用以指定索引层的默认查询analyzer配置&lt;/p&gt;

&lt;p&gt;如果考虑到这些额外参数，一个搜索时的 完整 顺序会是下面这样：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;查询自己定义的 analyzer ，否则&lt;/li&gt;
  &lt;li&gt;字段映射里定义的 search_analyzer ，否则&lt;/li&gt;
  &lt;li&gt;字段映射里定义的 analyzer ，否则&lt;/li&gt;
  &lt;li&gt;索引设置中名为 default_search 的分析器，默认为&lt;/li&gt;
  &lt;li&gt;索引设置中名为 default 的分析器，默认为&lt;/li&gt;
  &lt;li&gt;standard 标准分析器&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;索引模板&quot;&gt;索引模板&lt;/h1&gt;

&lt;p&gt;通过设置索引模板，当新的索引创建时，通过模板来设置索引的一些配置，如字段mapping等。&lt;/p&gt;

&lt;h1 id=&quot;相关度&quot;&gt;相关度&lt;/h1&gt;

&lt;p&gt;相关度用来评断文档匹配度&lt;/p&gt;

&lt;p&gt;当数据量太少时会出现TF-IDF算法的分片IDF不准确的情况，会导致_score不对的情况，但现实世界一般数据量都够大，能迅速均化IDF。&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Jun 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/elasticsearch/2017/06/29/elasticsearch-note-2/</link>
        <guid isPermaLink="true">http://localhost:4000/elasticsearch/2017/06/29/elasticsearch-note-2/</guid>
        
        <category>elasticsearch学习笔记</category>
        
        
        <category>elasticsearch</category>
        
      </item>
    
      <item>
        <title>spark2学习笔记五</title>
        <description>&lt;h1 id=&quot;shuffle操作&quot;&gt;Shuffle操作&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Spark中的某些操作触发一个名为shuffle的事件。shuffle是Spark重新分发数据的机制，以便在不同的分区之间进行分组。这通常涉及在执行器和驱动程序之间复制数据，从而进行复杂而昂贵的操作。&lt;/p&gt;

&lt;p&gt;要了解在Shuffle过程中发生了什么，我们可以参照reduceByKey操作的例子。reduceByKey操作生成一个新的RDD，其中同一个key的所有值被合并成一个元组——key和在该key关联的所有值上执行一个reduce函数的结果。挑战在于，并非所有的值都驻留在同一个partition上，甚至是同一台机器上，但它们必须协作来计算结果。&lt;/p&gt;

&lt;p&gt;在Spark中，数据通常不会跨分区分布到特定操作的必要位置。在计算过程中，单个任务将在单个分区上进行操作——因此，为了组织所有的数据以执行单个reduceByKey任务，Spark需要执行所有操作。它必须从所有分区读取所有键的所
虽然每个shuffle后的partition有值，然后将各个分区的值合并到一起来计算每个key的最终结果——这称为shuffle。&lt;/p&gt;
</description>
        <pubDate>Wed, 28 Jun 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/spark2/2017/06/28/spark2-note-5/</link>
        <guid isPermaLink="true">http://localhost:4000/spark2/2017/06/28/spark2-note-5/</guid>
        
        <category>spark2学习笔记</category>
        
        
        <category>spark2</category>
        
      </item>
    
      <item>
        <title>spark2学习笔记四</title>
        <description>&lt;h1 id=&quot;rdd操作&quot;&gt;RDD操作&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;理解闭包&quot;&gt;理解闭包&lt;/h2&gt;

&lt;p&gt;spark中最困难的事情之一就是理解代码在集群中执行时变量和方法的生命周期范围。在变量生命周期之外使用RDD操作修改变量可能是一个常见的错误。在下面的例子中，有一段使用foreach去增加计数器的代码，但是除了这个操作导致问题外，其他操作也可能会产生相似的问题。&lt;/p&gt;

&lt;p&gt;将下面当做本地RDD元素求和，对于操作是否在同一个JVM中，这决定了操作的结果。一个普遍的例子是spark应用是运行在本地模式（–master=local[n]）还是发布到一个集群（例如用spark-submit提交到YARN）&lt;/p&gt;

&lt;p&gt;{ highlight java }
int counter = 0;
JavaRDD&lt;Integer&gt; rdd = sc.parallelize(data);&lt;/Integer&gt;&lt;/p&gt;

&lt;p&gt;// Wrong: Don’t do this!!
rdd.foreach(x -&amp;gt; counter += x);&lt;/p&gt;

&lt;p&gt;println(“Counter value: “ + counter);
{ endhighlight }&lt;/p&gt;

&lt;p&gt;上述代码的结果时未定义的，并且可能不会像预期的那样工作。执行job时，spark将RDD操作分解为多个在一个执行器上执行的task。在执行之前，spark计算出task的闭包。闭包是执行器在RDD上执行必须的变量和方法的集合（在这个例子中时foreach）。这个闭包被序列化发送到每一个执行器。&lt;/p&gt;

&lt;p&gt;被发送到每个执行器节点上的闭包中的变量是一个值拷贝，那么当counter变量被foreach引用，这个counter变量就已经和驱动程序节点上的counter变量是不一样的。在驱动程序节点的内存中依然有一个counter变量，但是此变量对于执行器来说是不可见的。执行器仅仅可见被序列化闭包中的值拷贝。结果，counter变量的最终值将还是0，因为所有在counter变量上的操作引用的都是被序列化闭包的counter拷贝值。&lt;/p&gt;

&lt;p&gt;在本地模式，在一些环境下，foreach函数可能和驱动程序使用同一个jvm，这将导致foreach函数引用原始counter变量，因此foreach将正确执行并正确更新counter变量。&lt;/p&gt;

&lt;p&gt;为了确保在这类场景中运行正确，应该使用累加器变量。在spark中累加器变量专门提供一种机制，当操作被划分到集群中的工作节点上运行时正确更新变量。后续的累加器部分会更详细介绍累加器变量。&lt;/p&gt;

&lt;p&gt;一般来说，闭包像循环和局部方法一样被构建，不应该用来改变全局状态。spark没有定义和保证对于引用的闭包外部的变量的更改操作。有些代码可以在本地模式下工作，但这只是偶然的，这样的代码在分布式模式下不会表现得像预期的那样。如果需要一些全局聚合，需要使用累加器。&lt;/p&gt;

&lt;p&gt;另一个常见的习惯是尝试用rdd.foreach(println)或rdd.map(println)打印RDD的元素。在单机模式下，这将生成预期的输出并打印所有的RDD元素。然而，在集群模式中，控制台的输出被执行器调用，而不是在驱动程序上，因此驱动程序的控制台不会显示这些，但是结果会打印到工作节点的控制台。要在驱动程序控制台上的打印所有元素，首先可以使用collect()方法将RDD带到驱动节点，然后使用rdd. collect(). foreach(println)打印结果。这个操作可能会导致驱动程序耗尽内存，因为collect()方法将整个RDD提取到一台机器上;如果只需要打印一些元素，更安全的方法是使用take():rdd. take(100). foreach(println)。&lt;/p&gt;

&lt;h1 id=&quot;使用键值对&quot;&gt;使用键值对&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;虽然大多数Spark操作在包含任何类型对象的RDDs上执行，但是一些特殊的操作只能在键值对的RDDs上使用。最常见的是分布式的shuffle操作，例如按一个key分组或聚合元素。&lt;/p&gt;

&lt;p&gt;在Java中，键值对用来自Scala标准库的Tuple2类来表示。您可以简单地调用new Tuple2(a,b)创建一个tuple对象，然后使用tuple._1()和tuple._2()访问其字段。&lt;/p&gt;

&lt;p&gt;由键值对组成的RDDs由JavaPairRDD类表示。您可以使用map操作的特殊版本(如mapToPair和flatMapToPair)来用JavaRDDs对象构造JavaPairRDDs对象。JavaPairRDD将具有标准的RDD函数和特殊的键值&lt;/p&gt;

&lt;p&gt;例如，下面的代码在键值对RDD上使用reducebykey操作来计算一个文件中每行文本的出现次数&lt;/p&gt;

&lt;p&gt;{ highlight java }
JavaRDD&lt;String&gt; lines = sc.textFile(&quot;data.txt&quot;);
JavaPairRDD&amp;lt;String, Integer&amp;gt; pairs = lines.mapToPair(s -&amp;gt; new Tuple2(s, 1));
JavaPairRDD&amp;lt;String, Integer&amp;gt; counts = pairs.reduceByKey((a, b) -&amp;gt; a + b);
{ endhighlight }&lt;/String&gt;&lt;/p&gt;

&lt;p&gt;例如,我们还可以使用counts.sortByKey()来对这些键值对按字母顺序进行排序，最后通过collect()函数将它们作为对象数组返回到驱动程序中。&lt;/p&gt;

&lt;p&gt;注意：当使用自定义对象作为键值对操作的键时，你必须确认有一个匹配hashcode方法的合适的equal方法。更详细的情况可以参考object.hashcode方法的官方API文档。&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Jun 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/spark2/2017/06/27/spark2-note-4/</link>
        <guid isPermaLink="true">http://localhost:4000/spark2/2017/06/27/spark2-note-4/</guid>
        
        <category>spark2学习笔记</category>
        
        
        <category>spark2</category>
        
      </item>
    
      <item>
        <title>elasticsearch学习笔记一</title>
        <description>&lt;h1 id=&quot;query--dsl&quot;&gt;Query  DSL&lt;/h1&gt;

&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Elasticsearch提供一个基于json的查询DSL，把查询DSL当做一颗查询抽象语法树（AST），查询DSL是由两部分子句组成的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;叶查询子句
叶查询子句在特定字段上查询特定值，例如match、term和range查询。这些查询能被自身使用。&lt;/li&gt;
  &lt;li&gt;混合查询子句
混合查询子句包含其他叶查询和混合查询。混合查询使用逻辑词汇来组合多个查询（如bool和dis_max查询），或者更改它们的属性（比如constant_score查询）。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;查询子句的行为取决于它们的查询和过滤上下文环境。&lt;/p&gt;

&lt;h2 id=&quot;查询和过滤上下文&quot;&gt;查询和过滤上下文&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;查询子句的行为取决于它们的查询和过滤上下文环境。&lt;/p&gt;

&lt;p&gt;查询上下文&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在查询上下文中使用的查询子句确定了文档对于查询子句的匹配度，但是没有确定文档是否匹配上了，查询子句计算出_score结果表示此文档相对于其他文档的匹配度。&lt;/li&gt;
  &lt;li&gt;当查询子句被传递一个查询参数时查询上下文生效，例如在search API中传递参数。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;过滤上下文&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在过滤上下文中使用的查询子句确定了文档是否匹配查询子句，确定结果是简单表示为yes和no,不用计算score。过滤上下文大部分使用过滤结构，例如&lt;/li&gt;
  &lt;li&gt;timestamp在2015和2016之间&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;status字段是否设置为published
被频繁使用的filter将被elasticsearch自动缓存起来加速性能&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;当查询子句被传递一个过滤参数时过滤上下文生效，例如在bool查询中传递参数filter和must_not，constant_score中的过滤参数，或者过滤聚合。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是查询子句在查询和过滤上下文被使用的search api的例子，这个查询使用下面的条件去匹配文档&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;title字段包含字符串search&lt;/li&gt;
  &lt;li&gt;content字段包含字符串elasticsearch&lt;/li&gt;
  &lt;li&gt;status字段包含字符串published&lt;/li&gt;
  &lt;li&gt;publish_date字段包含晚于2015-01-01的时间
    &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/_search&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;query&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bool&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;must&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Search&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Elasticsearch&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;filter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;term&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;published&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;range&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;publish_date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;gte&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2015-01-01&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ol&gt;
      &lt;li&gt;query参数指出查询上下文&lt;/li&gt;
      &lt;li&gt;bool和两个match子句在查询上下文中被使用，意味着它们被用来确定文档的匹配程度&lt;/li&gt;
      &lt;li&gt;filter参数表示过滤上下文&lt;/li&gt;
      &lt;li&gt;term和range子句在过滤上下文中被使用，它们将过滤掉不匹配的文档，但是不影响文档的匹配度&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;在查询上下文中使用影响文档匹配度的子句，其他子句应该放在过滤上下文中。&lt;/p&gt;

&lt;h2 id=&quot;match-all-query&quot;&gt;Match All Query&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;最简单的查询是匹配所有文档，所有文档的_score都是1&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/_search&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;query&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match_all&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;_score能被boost参数改变&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/_search&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;query&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match_all&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;boost&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;mathc_none和match_all相反，不匹配任何文档&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/_search&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;query&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match_none&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;full-text-queries&quot;&gt;Full text queries&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;高级全文检索一般用于在像邮件正文这样的全文字段上运行全文检索，它们理解已经被分词的字段，并且在执行之前将每个字段的分词器（或者查询分词器）应用到查询串上。&lt;/p&gt;

&lt;p&gt;全文检索包括如下&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;match查询：全文检索的标准查询模式，包括模糊查询、短语查询和近似查询&lt;/li&gt;
  &lt;li&gt;match_phrase查询：和match查询相似，但是被用来进行短语精确匹配和单词近似匹配&lt;/li&gt;
  &lt;li&gt;match_phrase_prefix查询：和match_phrase相似，但是被用来进行在最后的单词上进行通配符查询&lt;/li&gt;
  &lt;li&gt;multi_match查询：在多字段上处理的match查询&lt;/li&gt;
  &lt;li&gt;common_terms查询：一个更专有化的查询，对于出现率较低的单词进行查询表现较好&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;query_string查询：支持复杂的lucene查询串语法，允许你指定AND&lt;/td&gt;
          &lt;td&gt;OR&lt;/td&gt;
          &lt;td&gt;NOT条件和多字段查询在单个查询串中。值用于专业用户。&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;simple_query_string:一个更简单和强健的query_string语法，比较适用于普通用户&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Match查询&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;match查询接受文本、数字和日期，分析这些输入，然后构造一个查询，例如：&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/_search&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;query&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;match&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;this is a test&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意，message是一个字段的名称，你能将它替换成任何字段的名称（包含_all）&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
match
match查询是一种布尔类型，这意味着被提供的文本是用来被分析，并且分析过程从被提供的文本中构建的bool查询。操作符可以是or或者and来控制bool子句，默认为or。可选的should子句最小数量能用minimum_should_match参数来设置。&lt;/p&gt;

&lt;p&gt;analyzer参数能被设置用来控制分析器对于文本的分析过程。默认为字段精确的匹配定义，或者系统默认的分析器。&lt;/p&gt;

&lt;p&gt;lenient参数设置为true时，将忽略配错数据类型带来的异常，例如用一个文本查询串来查询一个数字字段。一般默认为false。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
Fuzziness&lt;/p&gt;

&lt;p&gt;fuzziness参数允许基于正在被查询字段的类型进行模糊匹配，下面为被允许的配置项&lt;/p&gt;

&lt;p&gt;在下面示例中prefix_length和max_expansions参数用来控制模糊处理过程。如果模糊想&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Jun 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/elasticsearch/2017/06/23/elasticsearch-note-1/</link>
        <guid isPermaLink="true">http://localhost:4000/elasticsearch/2017/06/23/elasticsearch-note-1/</guid>
        
        <category>elasticsearch学习笔记</category>
        
        
        <category>elasticsearch</category>
        
      </item>
    
  </channel>
</rss>
